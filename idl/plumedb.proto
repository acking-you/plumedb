syntax = "proto3";
package plumedb;


message KeyValePair{
    bytes key = 1;
    bytes value = 2;
}

message FillReq{
    repeated KeyValePair pairs = 1;
    bool query_profiler = 2;
}

message FillResp{
    uint64 query_time = 1;
    string query_id = 2;
    optional string profiler = 3;
}

message GetReq{
    bytes key = 1;
    bool query_profiler = 2;
}

message GetResp{
    optional bytes value = 1;
    uint64 query_time = 2;
    string query_id = 3;
    optional string profiler = 4;
}

message Unbounded{}

message Bound{
    oneof Value{
        Unbounded unbouned = 1;
        bytes include = 2;
        bytes exclude = 3;
    }
}

message ScanReq{
    Bound upper = 1;
    Bound lower = 2;
    bool query_profiler = 3;
}

message ScanResp{
    repeated KeyValePair pairs = 1;
    uint64 query_time = 2;
    string query_id = 3;
    optional string profiler = 4;
}

message KeysReq{
    Bound upper = 1;
    Bound lower = 2;
    bool query_profiler = 3;
}

message KeysResp{
    repeated bytes keys = 1;
    uint64 query_time = 2;
    string query_id = 3;
    optional string profiler = 4;
}

message DelReq{
    bytes key = 1;
    bool query_profiler = 2;
}

message DelResp{
    uint64 query_time = 1;
    string query_id = 2;
    optional string profiler = 3;
}

enum StatusType{
   MEMTABLE = 0;
   SST = 1;
   LEVEL = 2;
   OPTIONS = 3;
   FILES = 4;
}

message ShowReq{
    StatusType status = 1;
}

message ShowResp{
    string status_graph = 1;
    uint64 query_time = 2;
    string query_id = 3;
}

message SubcribeReq{
    string channel = 1;
    bool fetch_prev = 2;
}

message FetchedValue{
    repeated bytes values = 1;
}

message SubcribeResp{
    optional FetchedValue pre_fetched_value = 1;
    optional bytes channal_value = 2;
    uint64 query_time = 3;
    string query_id = 4;
}

message PublishReq{
    string channel = 1;
    repeated bytes value = 2;
    bool profiler = 3;
}

message PublishResp{
    uint64 query_time = 1;
    string query_id = 2;
    optional string profiler = 3;
}

enum ChannelOp{
    ADD = 0;
    SHOW = 1;
}

message ChannelsReq{
    string channel = 1;
    ChannelOp op = 2;
    bool profiler = 3;
}

message ChannelsResp{
    uint64 query_time = 1;
    string query_id = 2;
    repeated string channels = 3;
    optional string profiler = 4;
}

service PlumeDBService {
    rpc fill(FillReq) returns (FillResp);
    rpc get(GetReq) returns (GetResp);
    rpc delete(DelReq) returns (DelResp);
    rpc scan(ScanReq) returns (ScanResp);
    rpc keys(KeysReq) returns (KeysResp);
    rpc show(ShowReq) returns (ShowResp);
    rpc subcribe(SubcribeReq) returns (stream SubcribeResp);
    rpc publish(PublishReq) returns (PublishResp);
    rpc channels(ChannelsReq) returns (ChannelsResp);
}
